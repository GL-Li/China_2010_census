ylim(c(24, 50)) +
theme(axis.title=element_blank(),
axis.text=element_blank(),
axis.ticks=element_blank())
?coord_fixed
# count of each city
city_count <- data.frame(table(shooting$city_state))
names(city_count) <- c("city", "count")
city_count$lon <- city_coord[as.character(city_count$city), "lon"]
city_count$lat <- city_coord[as.character(city_count$city), "lat"]
# map the shooting locations in lower 48 states
us <- map_data("state")
ggplot() +
geom_map(data = us, map = us, aes(long, lat, map_id = region), color = "grey", fill = "white") +
geom_point(data = city_count, aes(lon, lat, size = count), alpha = 0.4, color = "red") +
scale_size_area() +
# xlim(c(-123, -69)) +
# ylim(c(24, 50)) +
theme(axis.title=element_blank(),
axis.text=element_blank(),
axis.ticks=element_blank()) +
coord_fixed(ratio = 0.8, xlim = c(-123, -69), ylim = c(24, 50))
# count of each city
city_count <- data.frame(table(shooting$city_state))
names(city_count) <- c("city", "count")
city_count$lon <- city_coord[as.character(city_count$city), "lon"]
city_count$lat <- city_coord[as.character(city_count$city), "lat"]
# map the shooting locations in lower 48 states
us <- map_data("state")
ggplot() +
geom_map(data = us, map = us, aes(long, lat, map_id = region), color = "grey", fill = "white") +
geom_point(data = city_count, aes(lon, lat, size = count), alpha = 0.4, color = "red") +
scale_size_area() +
# xlim(c(-123, -69)) +
# ylim(c(24, 50)) +
theme(axis.title=element_blank(),
axis.text=element_blank(),
axis.ticks=element_blank()) +
coord_fixed(ratio = 1.2, xlim = c(-123, -69), ylim = c(24, 50))
# count of each city
city_count <- data.frame(table(shooting$city_state))
names(city_count) <- c("city", "count")
city_count$lon <- city_coord[as.character(city_count$city), "lon"]
city_count$lat <- city_coord[as.character(city_count$city), "lat"]
# map the shooting locations in lower 48 states
us <- map_data("state")
ggplot() +
geom_map(data = us, map = us, aes(long, lat, map_id = region), color = "grey", fill = "white") +
geom_point(data = city_count, aes(lon, lat, size = count), alpha = 0.4, color = "red") +
scale_size_area() +
# xlim(c(-123, -69)) +
# ylim(c(24, 50)) +
theme(axis.title=element_blank(),
axis.text=element_blank(),
axis.ticks=element_blank()) +
coord_fixed(ratio = 1.5, xlim = c(-123, -69), ylim = c(24, 50))
# count of each city
city_count <- data.frame(table(shooting$city_state))
names(city_count) <- c("city", "count")
city_count$lon <- city_coord[as.character(city_count$city), "lon"]
city_count$lat <- city_coord[as.character(city_count$city), "lat"]
# map the shooting locations in lower 48 states
us <- map_data("state")
ggplot() +
geom_map(data = us, map = us, aes(long, lat, map_id = region), color = "grey", fill = "white") +
geom_point(data = city_count, aes(lon, lat, size = count), alpha = 0.4, color = "red") +
scale_size_area() +
# xlim(c(-123, -69)) +
# ylim(c(24, 50)) +
theme(axis.title=element_blank(),
axis.text=element_blank(),
axis.ticks=element_blank()) +
coord_fixed(ratio = 1.4, xlim = c(-123, -69), ylim = c(24, 50))
# count of each city
city_count <- data.frame(table(shooting$city_state))
names(city_count) <- c("city", "count")
city_count$lon <- city_coord[as.character(city_count$city), "lon"]
city_count$lat <- city_coord[as.character(city_count$city), "lat"]
# map the shooting locations in lower 48 states
us <- map_data("state")
ggplot() +
geom_map(data = us, map = us, aes(long, lat, map_id = region), color = "grey", fill = "white") +
geom_point(data = city_count, aes(lon, lat, size = count), alpha = 0.4, color = "red") +
scale_size_area() +
xlim(c(-123, -69)) +
ylim(c(24, 50)) +
theme(axis.title=element_blank(),
axis.text=element_blank(),
axis.ticks=element_blank()) +
coord_map()
# coord_fixed(ratio = 1.4, xlim = c(-123, -69), ylim = c(24, 50))
# count of each city
city_count <- data.frame(table(shooting$city_state))
names(city_count) <- c("city", "count")
city_count$lon <- city_coord[as.character(city_count$city), "lon"]
city_count$lat <- city_coord[as.character(city_count$city), "lat"]
# map the shooting locations in lower 48 states
us <- map_data("state")
ggplot() +
geom_map(data = us, map = us, aes(long, lat, map_id = region), color = "grey", fill = "white") +
geom_point(data = city_count, aes(lon, lat, size = count), alpha = 0.4, color = "red") +
scale_size_area() +
xlim(c(-123, -69)) +
ylim(c(24, 50)) +
theme(axis.title=element_blank(),
axis.text=element_blank(),
axis.ticks=element_blank()) +
coord_map()
# count of each city
city_count <- data.frame(table(shooting$city_state))
names(city_count) <- c("city", "count")
city_count$lon <- city_coord[as.character(city_count$city), "lon"]
city_count$lat <- city_coord[as.character(city_count$city), "lat"]
# map the shooting locations in lower 48 states
us <- map_data("state")
ggplot() +
geom_map(data = us, map = us, aes(long, lat, map_id = region), color = "grey", fill = "white") +
geom_point(data = city_count, aes(lon, lat, size = count), alpha = 0.4, color = "red") +
scale_size_area() +
ggtitle("Location and count of fatal police shooting") +
xlim(c(-123, -69)) +
ylim(c(24, 50)) +
theme(axis.title=element_blank(),
axis.text=element_blank(),
axis.ticks=element_blank()) +
coord_map()
library(ggplot2)
library(ggmap)
shooting <- read.csv("database.csv", stringsAsFactors = FALSE)
# add new column for city location
shooting$city_state <- paste0(shooting$city, ", ", shooting$state)
# Download city coordinates on your local computer as Google Map only allows 2500 quesries a day
# downloading city coordinates takes a long time. save the download to local computer as a csv file
# if (!file.exists("city_coord.csv")) {
#     city_coord <- data.frame(geocode(unique(shooting$city_state)))  # do not repeat cities
#     city_coord$city_state <- unique(shooting$city_state)
#     write.csv(city_coord, file = "city_coord.csv", row.names = FALSE)
# }
# city_coord <- read.csv("city_coord.csv")
# rownames(city_coord) <- city_coord$city_state
# shooting$lon <- city_coord[shooting$city_state, "lon"]
# shooting$lat <- city_coord[shooting$city_state, "lat"]
# Due to the restriction of Google Map, I shared the downloaded city coordinates
# data online. skip it on your local computer and run above commented code instead
city_coord <- read.csv("https://s3.amazonaws.com/gl-shared-data/city_coord.csv")
rownames(city_coord) <- city_coord$city_state
shooting$lon <- city_coord[shooting$city_state, "lon"]
shooting$lat <- city_coord[shooting$city_state, "lat"]
# count of each city
city_count <- data.frame(table(shooting$city_state))
names(city_count) <- c("city", "count")
city_count$lon <- city_coord[as.character(city_count$city), "lon"]
city_count$lat <- city_coord[as.character(city_count$city), "lat"]
# map the shooting locations in lower 48 states
us <- map_data("state")
ggplot() +
geom_map(data = us, map = us, aes(long, lat, map_id = region), color = "grey", fill = "white") +
geom_point(data = city_count, aes(lon, lat, size = count), alpha = 0.4, color = "red") +
scale_size_area() +
xlim(c(-123, -69)) +
ylim(c(24, 50)) +
theme(axis.title=element_blank(),
axis.text=element_blank(),
axis.ticks=element_blank()) +
coord_map()
install.packages("bookdown")
install.packages(c("acepack", "BH", "chron", "colorspace", "curl", "data.table", "ggplot2", "git2r", "Hmisc", "htmlwidgets", "maptools", "openssl", "plotly", "proto", "Rcpp", "reshape2", "rmarkdown", "rsconnect", "scales", "shiny", "slam", "XML"))
install.packages(c("acepack", "BH", "chron", "colorspace", "curl", "data.table", "git2r", "Hmisc", "htmlwidgets", "maptools", "openssl", "plotly", "proto", "Rcpp", "reshape2", "rmarkdown", "rsconnect", "scales", "shiny", "slam", "XML"))
library("ggplot2", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.3")
remove.packages("ggplot2", lib="~/R/x86_64-pc-linux-gnu-library/3.3")
install.packages("ggplot2", version="2.1.0")
install.packages("ggplot2", version = "2.1.0")
dt_new <- structure(list(a = 1:3,
b = c("a", "b", "c")),
.Names = c("a", "b"),
row.names = c(NA, -3L),
class = c("data.table", "data.frame"))
class(dt_new)
f <- function() {
dt_new <- structure(list(a = 1:3,
b = c("a", "b", "c")),
.Names = c("a", "b"),
row.names = c(NA, -3L),
class = c("data.table", "data.frame"))
return(df_new)
}
f
f()
f <- function() {
dt_new <- structure(list(a = 1:3,
b = c("a", "b", "c")),
.Names = c("a", "b"),
row.names = c(NA, -3L),
class = c("data.table", "data.frame"))
return(dt_new)
}
f()
# prepare data =================================================================
shooting <- fread("downloaded_data/database.csv")
library(knitr)
opts_chunk$set(warning = F, echo = F, message = F, results = "hide")
library(ggplot2)
library(ggrepel)
library(data.table)
library(ggmap)
# prepare data =================================================================
shooting <- fread("downloaded_data/database.csv")
# list all states with at lease one black killed
black_killed_state <- shooting[, .(black_killed = .N), .(race, state)][race == "B"][order(-black_killed)]
# set up data for plot and add all values later on
data_plot <- black_killed_state[, .(state , black_killed)]
# add total killed and perent of blacks among killed in each state to data_plot
total_killed <- shooting[, .(total_killed = .N), by = state]
data_plot <- data_plot[total_killed, on = "state"]
data_plot[is.na(black_killed), "black_killed"] <- 0
data_plot[, black_killed_percent := round(black_killed / total_killed, 3) * 100]
# add black population in each state to data_plot. data downloaded from
# https://en.wikipedia.org/wiki/List_of_U.S._states_by_African-American_population
# using rvest package and dput() data frame below.
black_population <- structure(
list(state = c("DC", "MS", "LA", "GA", "MD", "SC", "AL", "NC",
"DE", "VA", "TN", "FL", "AR", "NY", "IL", "NJ",
"MI", "OH", "TX", "MO", "PA", "CT", "IN", "NV",
"KY", "MA", "OK", "RI", "CA", "KS", "WI", "MN",
"NE", "CO", "AK", "AZ", "WA", "WV", "HI", "NM",
"IA", "OR", "WY", "UT", "NH", "SD", "ND", "ME",
"ID", "VT", "MT"),
black_population = c(305074,  1074200, 1506534, 3150435, 1798593, 1290684, 1251311, 2048628,
191814,  1551399, 1055689, 2999862, 449895,  3073800, 1866414, 1204826,
1400362, 1407681, 2979598, 704043,  1377689, 362296,  591397,  255633,
361273,  528761,  277644,  79719,   2299072, 167864,  359148,  274412,
82885,   201737,  23263,   259008,  240042,  63124,   21424,   42550,
89148,   69206,   4748,    29287,   15035,   10207,   7960,    15707,
9810,    6277,    4027),
population_percent = c(50.08, 37.3,  32.4,  31.4,  30.1,  28.48, 26.38, 21.6,
20.95, 19.91, 16.78, 15.91, 15.76, 15.18, 14.88, 14.46,
14.24, 12.04, 11.91, 11.49, 10.79, 10.34, 9.07,  9,
8.2,   8.1,   7.96,  7.5,   6.67,  6.15,  6.07,  4.57,
4.5,   4.28,  4.27,  4.16,  3.74,  3.58,  3.08,  2.97,
2.68,  2.01,  1.29,  1.27,  1.22,  1.14,  1.08,  1.03,
0.95,  0.87,  0.67)),
.Names = c("state","black_population", "population_percent"),
class = "data.frame",
row.names = 1:51L)
black_population <- data.table(black_population)
data_plot <- data_plot[black_population, on = "state"]
# add percent of vote for Obama in each state in 2012 election. Data downloaded from
# https://en.wikipedia.org/wiki/United_States_presidential_election,_2012
# and dput() the data frame below
vote_obama <- structure(
list(state = c("AL", "AK", "AZ", "AR", "CA", "CO", "CT", "DE",
"DC", "FL", "GA", "HI", "ID", "IL", "IN", "IA",
"KS", "KY", "LA", "ME", "MD", "MA", "MI", "MN",
"MS", "MO", "MT", "NE", "NV", "NH", "NJ", "NM",
"NY", "NC", "ND", "OH", "OK", "OR", "PA", "RI",
"SC", "SD", "TN", "TX", "UT", "VT", "VA", "WA",
"WV", "WI", "WY"),
vote_percent = c(38.36, 40.81, 44.59, 36.88, 60.24, 51.49, 58.06, 58.61,
90.91, 50.01, 45.48, 70.55, 32.62, 57.6,  43.93, 51.99,
37.99, 37.8,  40.58, 56.27, 61.97, 60.65, 54.21, 52.65,
43.79, 44.38, 41.7,  38.03, 52.36, 51.98, 58.38, 52.99,
63.35, 48.35, 38.69, 50.67, 33.23, 54.24, 51.97, 62.7,
44.09, 39.87, 39.08, 41.38, 24.75, 66.57, 51.16, 56.16,
35.54, 52.83, 27.82)
),
.Names = c("state", "vote_percent"),
class = "data.frame",
row.names = 1:51L)
vote_obama <- data.table(vote_obama)
data_plot <- vote_obama[data_plot, on = "state"]
# now we can calculate the ratio that represents how many times blacks are likely
# to be killed by polce compared to non-blacks.
# the ratio is k * (100 - p) / (p * (100 - k)) where k is percent of blacks among killed
# and p is percent of black population.
data_plot[,  ratio := round(black_killed_percent * (100 - population_percent) /
(population_percent * (100 - black_killed_percent)), 3)]
# in DC all 8 killed are blacks. the ratio is infinity. we use 10 to represent it
data_plot[state == "DC", "ratio"] <- 10
View(data_plot)
# relative probability compared to non-blacks killed by police.======
ggplot(data_plot[black_killed >= 5 | black_population > 5e5], aes(vote_percent, ratio)) +
geom_point(aes(color = black_population/1e6, size = black_killed), alpha = 1) +
scale_size_area(guide = guide_legend(title = "number of\nblacks killed",
override.aes = list(shape = 1))) +
scale_color_gradient(low = "blue", high = "red",
guide = guide_legend(title = "black\npopulation\n(million)",
override.aes = list(size=4))) +
geom_text_repel(aes(label = state), size = 4) +
geom_smooth(method = "lm", se = FALSE, color = "black", linetype = 2, size = 0.2) +
xlab("Percentage of population voted for Obama in 2012 (%)") +
ylab("Ratio") +
ggtitle("Ratio of chance of blacks killed to that of non-blacks in each state") +
theme(legend.position = c(0.91, 0.4)) +
geom_hline(yintercept = 2.2, linetype = 2, size = 0.2) +
annotate("text", x = 70, y = 2, label = "national average") +
scale_y_continuous(breaks = seq(0, 11, 2)) +
annotate("text", x = 33, y = 9.5, hjust = 0, alpha = 0.5,
label = "Only showing data of states with more than 5 blacks killed or\nwith more than half million black population. Ratio of DC is\ninfinity, set to 10 for plotting.")
#    scale_color_gradient2(low = "red", mid = "white", high = "blue", midpoint = 50) +
#    theme(panel.background = element_rect(fill = 'grey', colour = 'black'))
# lower 48 states boundary data
# make a lookup table to convert lowercase state name to abbrivation
lowercase_to_abbr <- c("AL", "AK", "AZ", "AR", "CA", "CO", "CT", "DE", "DC", "FL",
"GA", "HI", "ID", "IL", "IN", "IA", "KS", "KY", "LA", "ME", "MD",
"MA", "MI", "MN", "MS", "MO", "MT", "NE", "NV", "NH", "NJ", "NM",
"NY", "NC", "ND", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN",
"TX", "UT", "VT", "VA", "WA", "WV", "WI", "WY")
names(lowercase_to_abbr) <- c("alabama", "alaska", "arizona", "arkansas", "california", "colorado",
"connecticut", "delaware", "district of columbia", "florida",
"georgia","hawaii", "idaho", "illinois", "indiana", "iowa", "kansas",
"kentucky", "louisiana", "maine", "maryland", "massachusetts",
"michigan", "minnesota", "mississippi", "missouri", "montana",
"nebraska", "nevada", "new hampshire", "new jersey", "new mexico",
"new york", "north carolina", "north dakota", "ohio", "oklahoma",
"oregon", "pennsylvania", "rhode island", "south carolina", "south dakota",
"tennessee", "texas", "utah", "vermont", "virginia", "washington",
"west virginia", "wisconsin", "wyoming")
us_state <- data.table(map_data("state"))
us_state <- us_state[, .(lon = long, lat = lat, state = lowercase_to_abbr[region], group = group)]
# add vote_obama to map data
# in DC, 90% voted for Obama, to get better color for full map, change it to 70%
vote_obama[state == "DC", "vote_percent"] <- 70
us_state <- vote_obama[us_state, on = "state"]
# add coordinate of state center for mapping. data were downloaded with ggmap::geocoding
# and tweaked for better appearance. dput() data frame below.
state_center_coord <- structure(
list(lon = c(-77,     -89.6,   -92.46,   -83.3,   -76.6,   -80.76,  -86.7,  -78.82,
-75.4,   -78.66,   -86.58,  -81.52,  -92.53,  -74.72,  -89.3,  -74.41,
-84.6,   -82.91,   -99.4,   -92.53,  -77.69,  -72.5,   -86.13, -116.92,
-84.47,  -72,      -97.09,  -71.5,   -119.42, -98.48,  -89.79, -94.69,
-99.9,   -105.78,  -117,    -111.59, -120.44, -80.85,  -105.5, -105.87,
-93.4,   -120.55,  -107.49, -111.59, -71.57,  -100.22, -100.6, -69.25,
-114.74, -72.58,   -109.36),
lat = c(38.9,  32.75, 30.98, 32.47, 39.3,  33.84, 32.92, 35.66,
38.9,  37.43, 35.72, 27.66, 35.2,  43.3,  40.63, 40.06,
44.31, 40.42, 31.97, 38.46, 41,    41.6,  40.27, 39.8,
37.74, 42.4,  35.31, 41.7,  36.78, 38.61, 44.78, 46.73,
41.49, 39.15, 30,    34.35, 47.72, 38.6,  26,    34.52,
41.88, 43.8,  43.08, 39.32, 43.39, 44.37, 47.55, 45.35,
44.07, 44.36, 46.88),
state = c("DC", "MS", "LA", "GA", "MD", "SC", "AL", "NC",
"DE", "VA", "TN", "FL", "AR", "NY", "IL", "NJ",
"MI", "OH", "TX", "MO", "PA", "CT", "IN", "NV",
"KY", "MA", "OK", "RI", "CA", "KS", "WI", "MN",
"NE", "CO", "AK", "AZ", "WA", "WV", "HI", "NM",
"IA", "OR", "WY", "UT", "NH", "SD", "ND", "ME",
"ID", "VT", "MT")),
.Names = c("lon", "lat", "state"),
row.names = c(NA, -51L),
class = "data.frame")
state_center_coord <- data.table(state_center_coord)
data_plot <- state_center_coord[data_plot, on = "state"]
# plot on map
ggplot(us_state, aes(lon, lat)) +
geom_polygon(aes(fill = vote_percent, group = group), color = "grey") +
scale_fill_gradient2(low = "red", mid = "white", high = "blue", midpoint = 50,
guide = guide_legend(title = "vote (%)", reverse = TRUE)) +
geom_point(data = data_plot[black_killed >= 5 | black_population > 5e5],
aes(lon, lat, size = ratio), alpha = 0.5) +
geom_text_repel(data = data_plot[black_killed > 5 | black_population > 5e5],
aes(lon, lat, label = state)) +
ggtitle("Ratio of chance of blacks killed to that of non-blacks in each state") +
theme(legend.position = c(0.95, 0.35)) +
theme(axis.title = element_blank(),
axis.ticks = element_blank(),
axis.text = element_blank()) +
annotate("text", x = -125, y = 24.5, hjust = 0, alpha = 0.5,
label = "Only showing ratios of states with more than 5 blacks killed or\nwith more than half million black population.")
ggplot(us_state, aes(lon, lat)) +
geom_polygon(aes(fill = vote_percent, group = group), color = "grey") +
scale_fill_gradient2(low = "red", mid = "white", high = "blue", midpoint = 50,
guide = guide_legend(title = "vote (%)", reverse = TRUE)) +
geom_point(data = data_plot[black_killed >= 5 | black_population > 5e5],
aes(lon, lat, size = ratio), alpha = 0.5) +
geom_text_repel(data = data_plot[black_killed >= 5 | black_population > 5e5],
aes(lon, lat, label = state)) +
ggtitle("Ratio of chance of blacks killed to that of non-blacks in each state") +
theme(legend.position = c(0.95, 0.35)) +
theme(axis.title = element_blank(),
axis.ticks = element_blank(),
axis.text = element_blank()) +
annotate("text", x = -125, y = 24.5, hjust = 0, alpha = 0.5,
label = "Only showing ratios of states with more than 5 blacks killed or\nwith more than half million black population.")
# relative probability compared to non-blacks killed by police.======
ggplot(data_plot[black_killed > 5 | black_population > 5e5], aes(vote_percent, ratio)) +
geom_point(aes(color = black_population/1e6, size = black_killed), alpha = 1) +
scale_size_area(guide = guide_legend(title = "number of\nblacks killed",
override.aes = list(shape = 1))) +
scale_color_gradient(low = "blue", high = "red",
guide = guide_legend(title = "black\npopulation\n(million)",
override.aes = list(size=4))) +
geom_text_repel(aes(label = state), size = 4) +
geom_smooth(method = "lm", se = FALSE, color = "black", linetype = 2, size = 0.2) +
xlab("Percentage of population voted for Obama in 2012 (%)") +
ylab("Ratio") +
ggtitle("Ratio of chance of blacks killed to that of non-blacks in each state") +
theme(legend.position = c(0.91, 0.4)) +
geom_hline(yintercept = 2.2, linetype = 2, size = 0.2) +
annotate("text", x = 70, y = 2, label = "national average") +
scale_y_continuous(breaks = seq(0, 11, 2)) +
annotate("text", x = 33, y = 9.5, hjust = 0, alpha = 0.5,
label = "Only showing data of states with more than 5 blacks killed or\nwith more than half million black population. Ratio of DC is\ninfinity, set to 10 for plotting.")
#    scale_color_gradient2(low = "red", mid = "white", high = "blue", midpoint = 50) +
#    theme(panel.background = element_rect(fill = 'grey', colour = 'black'))
# lower 48 states boundary data
# make a lookup table to convert lowercase state name to abbrivation
lowercase_to_abbr <- c("AL", "AK", "AZ", "AR", "CA", "CO", "CT", "DE", "DC", "FL",
"GA", "HI", "ID", "IL", "IN", "IA", "KS", "KY", "LA", "ME", "MD",
"MA", "MI", "MN", "MS", "MO", "MT", "NE", "NV", "NH", "NJ", "NM",
"NY", "NC", "ND", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN",
"TX", "UT", "VT", "VA", "WA", "WV", "WI", "WY")
names(lowercase_to_abbr) <- c("alabama", "alaska", "arizona", "arkansas", "california", "colorado",
"connecticut", "delaware", "district of columbia", "florida",
"georgia","hawaii", "idaho", "illinois", "indiana", "iowa", "kansas",
"kentucky", "louisiana", "maine", "maryland", "massachusetts",
"michigan", "minnesota", "mississippi", "missouri", "montana",
"nebraska", "nevada", "new hampshire", "new jersey", "new mexico",
"new york", "north carolina", "north dakota", "ohio", "oklahoma",
"oregon", "pennsylvania", "rhode island", "south carolina", "south dakota",
"tennessee", "texas", "utah", "vermont", "virginia", "washington",
"west virginia", "wisconsin", "wyoming")
us_state <- data.table(map_data("state"))
us_state <- us_state[, .(lon = long, lat = lat, state = lowercase_to_abbr[region], group = group)]
# add vote_obama to map data
# in DC, 90% voted for Obama, to get better color for full map, change it to 70%
vote_obama[state == "DC", "vote_percent"] <- 70
us_state <- vote_obama[us_state, on = "state"]
# add coordinate of state center for mapping. data were downloaded with ggmap::geocoding
# and tweaked for better appearance. dput() data frame below.
state_center_coord <- structure(
list(lon = c(-77,     -89.6,   -92.46,   -83.3,   -76.6,   -80.76,  -86.7,  -78.82,
-75.4,   -78.66,   -86.58,  -81.52,  -92.53,  -74.72,  -89.3,  -74.41,
-84.6,   -82.91,   -99.4,   -92.53,  -77.69,  -72.5,   -86.13, -116.92,
-84.47,  -72,      -97.09,  -71.5,   -119.42, -98.48,  -89.79, -94.69,
-99.9,   -105.78,  -117,    -111.59, -120.44, -80.85,  -105.5, -105.87,
-93.4,   -120.55,  -107.49, -111.59, -71.57,  -100.22, -100.6, -69.25,
-114.74, -72.58,   -109.36),
lat = c(38.9,  32.75, 30.98, 32.47, 39.3,  33.84, 32.92, 35.66,
38.9,  37.43, 35.72, 27.66, 35.2,  43.3,  40.63, 40.06,
44.31, 40.42, 31.97, 38.46, 41,    41.6,  40.27, 39.8,
37.74, 42.4,  35.31, 41.7,  36.78, 38.61, 44.78, 46.73,
41.49, 39.15, 30,    34.35, 47.72, 38.6,  26,    34.52,
41.88, 43.8,  43.08, 39.32, 43.39, 44.37, 47.55, 45.35,
44.07, 44.36, 46.88),
state = c("DC", "MS", "LA", "GA", "MD", "SC", "AL", "NC",
"DE", "VA", "TN", "FL", "AR", "NY", "IL", "NJ",
"MI", "OH", "TX", "MO", "PA", "CT", "IN", "NV",
"KY", "MA", "OK", "RI", "CA", "KS", "WI", "MN",
"NE", "CO", "AK", "AZ", "WA", "WV", "HI", "NM",
"IA", "OR", "WY", "UT", "NH", "SD", "ND", "ME",
"ID", "VT", "MT")),
.Names = c("lon", "lat", "state"),
row.names = c(NA, -51L),
class = "data.frame")
state_center_coord <- data.table(state_center_coord)
data_plot <- state_center_coord[data_plot, on = "state"]
# plot on map
ggplot(us_state, aes(lon, lat)) +
geom_polygon(aes(fill = vote_percent, group = group), color = "grey") +
scale_fill_gradient2(low = "red", mid = "white", high = "blue", midpoint = 50,
guide = guide_legend(title = "vote (%)", reverse = TRUE)) +
geom_point(data = data_plot[black_killed > 5 | black_population > 5e5],
aes(lon, lat, size = ratio), alpha = 0.5) +
geom_text_repel(data = data_plot[black_killed > 5 | black_population > 5e5],
aes(lon, lat, label = state)) +
ggtitle("Ratio of chance of blacks killed to that of non-blacks in each state") +
theme(legend.position = c(0.95, 0.35)) +
theme(axis.title = element_blank(),
axis.ticks = element_blank(),
axis.text = element_blank()) +
annotate("text", x = -125, y = 24.5, hjust = 0, alpha = 0.5,
label = "Only showing ratios of states with more than 5 blacks killed or\nwith more than half million black population.")
load("RData/house.RData")
setwd("~/Dropbox/my_R_projects/China_2010_census/shiny_English")
load("RData/house.RData")
load("RData/China_province_map_data.RData")
library(ggplot2)
setwd("~/Dropbox/my_R_projects/China_2010_cencus/prepare_data/")
rm(list = ls())
source("global_functions.R")
setwd("~/Dropbox/my_R_projects/China_2010_census/prepare_data/")
rm(list = ls())
source("global_functions.R")
library(readxl)
houseAll <- read_excel("xls_data/house_average_room_and_area_1_14.xls")
houseAll$where <- "all"
houseAll$地点 <- "全国"
houseCity <- read_excel("xls_data/house_average_room_and_area_city_1_14a.xls")
houseCity$where <- "city"
houseCity$地点 <- "城市"
houseTown <- read_excel("xls_data/house_average_room_and_area_town_1_14b.xls")
houseTown$where <- "town"
houseTown$地点 <- "乡镇"
houseVillage <- read_excel("xls_data/house_average_room_and_area_villiage_1_14c.xls")
houseVillage$where <- "village"
houseVillage$地点 <- "农村"
houseCombined <- rbind(houseAll, houseCity, houseTown, houseVillage)
houseCombined <- na.omit(houseCombined)
houseCombined$省名 <- gsub(" ", "", houseCombined$省名)
colnames(houseCombined) <- c("Chinese", "number_of_household", "population",
"number_of_rooms_per_household", "area_per_head",
"number_of_rooms_per_head", "where", 'location')
houseMap <- merge_to_map(houseCombined, "China_province_map_data.csv")
View(houseMap)
library(data.table)
aaa <- fread("China_province_map_data.csv")
View(houseCombined)
bbb <- fread("xls_data/house_average_room_and_area_1_14.xls")
bbb <- fread("China_province_map_data_full.csv")
houseMap <- merge_to_map(houseCombined, "China_province_map_data_full.csv")
houseMap <- merge_to_map(houseCombined, "China_province_map_data.csv")
shiny::runApp('~/Dropbox/my_R_projects/China_2010_census/shiny_English')
